#!/usr/bin/env python
# coding=utf-8

import commands 
import os

pktlen = [64,128,256,512,1024,1280,1518]

generator = [2,3,5,10] 
manager = [3,5,7,11]

gpool_size = [500000,800000] 
pqueue_length = [500000,800000]

counter = 0

exename = './simulation'

def averages(listn):
    sums = []
    for item in listn:
        temp = str(item).split(":")[1]
        if temp >= 3:
            sums.append(int(temp))
    return sum(sums) / len(sums)

list64   = [] 
list128  = [] 
list256  = [] 
list512  = [] 
list1024 = [] 
list1280 = [] 
list1518 = [] 

for len1 in pktlen:
    if os.path.exists('./.result' + str(len1)):
	os.remove('./.result' + str(len1))
  
result64   = open('.result64',   'a') 
result128  = open('.result128',  'a') 
result256  = open('.result256',  'a') 
result512  = open('.result512',  'a') 
result1024 = open('.result1024', 'a') 
result1280 = open('.result1280', 'a') 
result1518 = open('.result1518', 'a') 

dicta = { 
        64:(list64,result64), 
        128:(list128,result128), 
        256:(list256,result256), 
        512:(list512,result512), 
        1024:(list1024,result1024), 
        1280:(list1280,result1280), 
        1518:(list1518,result1518), 
        }

for k in dicta:
    print "dict [%s] = " % k,dicta[k]

"""
for p in pktlen:
    dicta[p][0].append(p)
    dicta[p][1].write("hello world\n")
    dicta[p][1].flush()
"""

for p in pktlen:
    for g in generator:
            for m in manager:
                for gp in gpool_size:
                    for pq in pqueue_length:
                        counter += 1
                        #if(counter <= 64):
                            #continue
                        print [counter]
                        exe = '%s --pktlen %d -g %d -p %d -m %d --gpool_size %d --pqueue_length %d' % (exename,(p),(g),(g),(m),(gp),(pq))
                        status,result = commands.getstatusoutput(exe)
                        print "status %d " % status
                        if status == 0:
                            listn = result.split("\n")
                            print listn
                            max = averages(listn)
                            maxargs = [p,g,g,m,gp,pq]
                        
                            dicta[p][0].append([max,maxargs])
                            dicta[p][1].write(str(max)+ ' ' + str(maxargs) + '\n')
                            dicta[p][1].flush()
                            #print dicta[p][0]

flist = []
ffile = open('.ffile','a')
for p in pktlen:
    dicta[p][0].sort(key=lambda x : x[0],reverse=True)
    flist.append(dicta[p][0][0])
    ffile.write(str(dicta[p][0][0]) + '\n')
