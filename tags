!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ALIGN	includes.h	68;"	d
CC	Makefile	/^CC = $(TILERA_ROOT)\/bin\/tile-gcc$/;"	m
CC	Makefile	/^CC = gcc$/;"	m
CHECK_SUM_H	checksum.h	9;"	d
COLLECTOR_MODE	includes.h	63;"	d
CONFIG_FILE	config.h	27;"	d
CONFIG_H_H	config.h	12;"	d
COUNT	packet_manager.c	116;"	d	file:
COUNT	packet_parser.c	232;"	d	file:
DEBUG	includes.h	59;"	d
DEBUG	includes.h	61;"	d
DESTORY_TIME	config.h	42;"	d
DISPLAY_H	display.h	9;"	d
EXECS	Makefile	/^EXECS=simulation $/;"	m
FULL_SPEED	includes.h	182;"	d
GENERATOR_MODE	includes.h	64;"	d
GENERATOR_POOL	pool_manager.h	/^    GENERATOR_POOL,$/;"	e	enum:_pool_type
GENERATOR_POOL_SIZE	config.h	29;"	d
GET_CYCLE_COUNT	includes.h	151;"	d
GET_CYCLE_COUNT	includes.h	156;"	d
GET_NEXT_DSTIP	packet_generator.c	74;"	d	file:
GET_NEXT_DSTPORT	packet_generator.c	94;"	d	file:
GET_NEXT_SRCIP	packet_generator.c	64;"	d	file:
GET_NEXT_SRCPORT	packet_generator.c	84;"	d	file:
GenerHandler	packet_generator.c	/^typedef void (GenerHandler) (packet_t * packet,sim_config_t * config);$/;"	t	file:
H_SESSION_H	packet_manager.h	8;"	d
INCLUDES_H	includes.h	8;"	d
INIT_LIST_HEAD	list.h	/^static inline void INIT_LIST_HEAD(struct list_head *list)$/;"	f
IP_CE	parse.c	25;"	d	file:
IP_DF	parse.c	26;"	d	file:
IP_IDX	includes.h	184;"	d
IP_MF	parse.c	27;"	d	file:
IP_OFFSET	parse.c	28;"	d	file:
LDFLAGS	Makefile	/^LDFLAGS= -lncurses -lpthread -lrt $/;"	m
LDFLAGS	Makefile	/^LDFLAGS= -lpthread -lgxio -ltmc -lncurses$/;"	m
LG2_CAPACITY	includes.h	84;"	d
LOSSRATIO_H	lossratio.h	9;"	d
L_HASH_H	hash.h	9;"	d
L_MPIPE_H	mpipe.h	9;"	d
MAKE_HASH	packet_manager.c	12;"	d	file:
MAKE_HASH	packet_parser.c	12;"	d	file:
MANAGER_BUFFER_SIZE	config.h	38;"	d
MANAGER_HASH_LENGTH	config.h	37;"	d
MANAGER_POOL	includes.h	102;"	d
MANAGER_POOL	pool_manager.h	/^    MANAGER_POOL$/;"	e	enum:_pool_type
MANAGER_POOL_SIZE	config.h	35;"	d
MANAGER_QUEUE_LENGTH	config.h	34;"	d
MAX_FACTOR	config.h	40;"	d
MPIPE_CC	Makefile	/^MPIPE_CC = $(TILERA_ROOT)\/bin\/tile-mpipe-cc$/;"	m
MPIPE_CC	Makefile	/^MPIPE_CC=mpipe-cc$/;"	m
NO_WAIT_MODE	includes.h	80;"	d
NS	config.c	461;"	d	file:
OBJS	Makefile	/^OBJS = display.o$/;"	m
OPT	Makefile	/^OPT = -Os$/;"	m
PACKET_GENERATOR_H	packet_generator.h	8;"	d
PAGE_SHIFT	includes.h	52;"	d
PARSER_POOL	pool_manager.h	/^    PARSER_POOL,$/;"	e	enum:_pool_type
PARSER_POOL_SIZE	config.h	32;"	d
PARSER_QUEUE_LENGTH	config.h	31;"	d
PARSE_PACKET_H	parse.h	9;"	d
PAY_LEN	includes.h	187;"	d
POOL_MANAGER_H	pool_manager.h	9;"	d
PROCBLOCK_SIZE	includes.h	51;"	d
TCP_IDX	includes.h	185;"	d
TMC_QUEUE	cacheline_queue.h	31;"	d
TMC_QUEUE	queue.h	63;"	d
TMC_QUEUE_CREDIT_MASK	cacheline_queue.h	25;"	d
TMC_QUEUE_CREDIT_SHIFT	cacheline_queue.h	22;"	d
TMC_QUEUE_SINGLE_MODIFIER	cacheline_queue.h	29;"	d
TranHandler	packet_parser.c	/^typedef void (TranHandler)(flow_item_t * flow,packet_t * packet,int header_len);$/;"	t	file:
UDP_IDX	includes.h	186;"	d
UNIX_DOMAIN	lossratio.c	14;"	d	file:
USER_SPEED	includes.h	183;"	d
USE_BASIC_QUEUE	includes.h	86;"	d
VERIFY	includes.h	70;"	d
WAIT_MODE	includes.h	79;"	d
WORKER_SET_SIZE	display.c	9;"	d	file:
__LIST_H_	list.h	10;"	d
__TMC_CACHELINE_QUEUE_H__	cacheline_queue.h	14;"	d
__TMC_QUEUE_H__	queue.h	32;"	d
__config	config.h	/^typedef struct __config$/;"	s
__list_add	list.h	/^static inline void __list_add(struct list_head *new,$/;"	f
__list_del	list.h	/^static inline void __list_del(struct list_head * prev, struct list_head * next)$/;"	f
__mpipe_t	mpipe.h	/^typedef struct __mpipe_t$/;"	s
_common_queue	queue_manager.h	/^typedef struct _common_queue$/;"	s
_group	packet_manager.h	/^typedef struct _group$/;"	s
_parser	packet_parser.h	/^typedef struct _parser$/;"	s
_pool	pool_manager.h	/^typedef struct _pool$/;"	s
_pool_type	pool_manager.h	/^typedef enum _pool_type$/;"	g
_session_item	includes.h	/^typedef struct _session_item$/;"	s
_session_manager	packet_manager.h	/^typedef struct _session_manager$/;"	s
alive	packet_generator.h	/^	int alive;$/;"	m	struct:generator
alive	packet_manager.h	/^	int alive;$/;"	m	struct:_session_manager
alive	packet_parser.h	/^	int alive;$/;"	m	struct:_parser
averages	simulation_test.py	/^def averages(listn):$/;"	f
barrier	mpipe.h	/^    tmc_sync_barrier_t barrier; $/;"	m	struct:__mpipe_t
blist	list.h	/^struct blist$/;"	s
bool	includes.h	54;"	d
bucket	hash.h	/^typedef struct bucket { $/;"	s
bucket	mpipe.h	/^    int                     bucket;$/;"	m	struct:__mpipe_t
bucket_t	hash.h	/^} bucket_t; $/;"	t	typeref:struct:bucket
buckets	hash.h	/^        bucket_t *buckets;$/;"	m	struct:hash_table
buffer	includes.h	/^    uint8_t  * buffer;$/;"	m	struct:_session_item
buffer	pool_manager.h	/^    void          * buffer;$/;"	m	struct:_pool
calc_period	config.c	/^uint32_t calc_period(double length,double rate,uint32_t thread_num)$/;"	f
channel	mpipe.h	/^    int channel;$/;"	m	struct:__mpipe_t
checksum_ip	checksum.c	/^void checksum_ip(struct iphdr * iph)$/;"	f
commands	simulation_test.py	/^import commands $/;"	i
common_queue_MANAGER_H	queue_manager.h	8;"	d
common_queue_t	queue_manager.h	/^}common_queue_t;$/;"	t	typeref:struct:_common_queue
compare_session	packet_manager.c	/^static inline int compare_session(session_item_t * item , flow_item_t * flow)$/;"	f	file:
config	packet_generator.h	/^    sim_config_t  * config;$/;"	m	struct:generator
config	packet_generator.h	/^    sim_config_t  * config;$/;"	m	struct:generator_group
config_file	simulation.c	/^static   const char * config_file = CONFIG_FILE;$/;"	v	file:
configed	mpipe.h	/^    int         configed;$/;"	m	struct:__mpipe_t
context	mpipe.h	/^    gxio_mpipe_context_t   context;$/;"	m	struct:__mpipe_t
count	hash.h	/^    uint32_t count;$/;"	m	struct:bucket
counter	simulation_test.py	/^counter = 0$/;"	v
cpus	mpipe.h	/^    cpu_set_t cpus;$/;"	m	struct:__mpipe_t
create_ipc_client	lossratio.c	/^int create_ipc_client()$/;"	f
create_ipc_server	lossratio.c	/^int create_ipc_server()$/;"	f
create_stack	mpipe.c	/^static void create_stack(gxio_mpipe_context_t* context, int stack_idx,$/;"	f	file:
cur_len	includes.h	/^    uint32_t cur_len;$/;"	m	struct:_session_item
daddr_cur	config.h	/^    uint32_t daddr_cur;$/;"	m	struct:__config
daddr_max	config.h	/^    uint32_t daddr_max;$/;"	m	struct:__config
daddr_min	config.h	/^    uint32_t daddr_min;$/;"	m	struct:__config
data	includes.h	/^    unsigned char * data;   \/* 一个包的数据部分*\/$/;"	m	struct:packet
delete_session	packet_manager.c	/^void delete_session(hash_table * ht,bucket_t * bucket)$/;"	f
destroy_common_queue	queue_manager.c	/^void destroy_common_queue(common_queue_t * common_queue)$/;"	f
destroy_generator	packet_generator.c	/^void   destroy_generator(generator_group_t * generator_group)$/;"	f
destroy_parser_group	packet_parser.c	/^void destroy_parser_group(parser_group_t * parser_group)$/;"	f
destroy_pool	pool_manager.c	/^void destroy_pool(pool_t * pool)$/;"	f
dicta	simulation_test.py	/^dicta = { $/;"	v
display_gen	display.c	/^static void display_gen(generator_group_t * generator_group)$/;"	f	file:
display_generator	display.c	/^static void display_generator(window_t * win,generator_group_t * generator_group)$/;"	f	file:
display_gpm	display.c	/^void display_gpm(generator_group_t * generator_group,$/;"	f
display_manager	display.c	/^static void display_manager(window_t * win,manager_group_t * manager_group)$/;"	f	file:
display_parser	display.c	/^static void display_parser(window_t * win, parser_group_t *  parser_group)$/;"	f	file:
dmac	mpipe.h	/^    gxio_mpipe_rules_dmac_t dmac;$/;"	m	struct:__mpipe_t
dport_cur	config.h	/^    uint32_t dport_cur;$/;"	m	struct:__config
dport_max	config.h	/^    uint32_t dport_max;$/;"	m	struct:__config
dport_min	config.h	/^    uint32_t dport_min;$/;"	m	struct:__config
drop_cause_empty_payload	lossratio.h	/^    uint64_t drop_cause_empty_payload;$/;"	m	struct:__anon2
drop_cause_generator_pool_empty	lossratio.h	/^    uint64_t drop_cause_generator_pool_empty;$/;"	m	struct:__anon2
drop_cause_manager_pool_empty	lossratio.h	/^    uint64_t drop_cause_manager_pool_empty;$/;"	m	struct:__anon2
drop_cause_no_payload	packet_parser.h	/^    uint64_t drop_cause_no_payload;$/;"	m	struct:_parser
drop_cause_parser_pool_empty	lossratio.h	/^    uint64_t drop_cause_parser_pool_empty;$/;"	m	struct:__anon2
drop_cause_parser_queue_full	lossratio.h	/^    uint64_t drop_cause_parser_queue_full;$/;"	m	struct:__anon2
drop_cause_pool_empty	packet_manager.h	/^    uint64_t drop_cause_pool_empty;$/;"	m	struct:_session_manager
drop_cause_pool_empty	packet_parser.h	/^    uint64_t drop_cause_pool_empty;$/;"	m	struct:_parser
drop_cause_unsupport_protocol	lossratio.h	/^    uint64_t drop_cause_unsupport_protocol;$/;"	m	struct:__anon2
drop_cause_unsupport_protocol	packet_parser.h	/^    uint64_t drop_cause_unsupport_protocol;$/;"	m	struct:_parser
drop_pempty_total	packet_generator.h	/^    uint64_t    drop_pempty_total;$/;"	m	struct:generator
drop_qfull_total	packet_generator.h	/^    uint64_t    drop_qfull_total;$/;"	m	struct:generator
drop_ratio	lossratio.c	/^double drop_ratio(drop_t * new, drop_t * old)$/;"	f
drop_t	lossratio.h	/^}drop_t;$/;"	t	typeref:struct:__anon2
drop_total	packet_generator.h	/^    uint64_t    drop_total;$/;"	m	struct:generator
dstmac	config.h	/^    unsigned char dstmac[6];$/;"	m	struct:__config
edma	mpipe.h	/^    unsigned int edma;$/;"	m	struct:__mpipe_t
empty	pool_manager.h	/^    pthread_cond_t  empty;$/;"	m	struct:_pool
empty	queue_manager.h	/^    pthread_cond_t empty;$/;"	m	struct:_common_queue
equeue	mpipe.h	/^    gxio_mpipe_equeue_t *  equeue;$/;"	m	struct:__mpipe_t
equeue_entries	config.h	/^    uint32_t equeue_entries;$/;"	m	struct:__config
equeue_entries	mpipe.h	/^    uint32_t    equeue_entries;$/;"	m	struct:__mpipe_t
ether_atoe	config.c	/^int ether_atoe(const char *a, unsigned char *e)$/;"	f
ether_etoa	config.c	/^char * ether_etoa(const unsigned char *e, char *a)$/;"	f
exe	simulation_test.py	/^                        exe = '%s --pktlen %d -g %d -p %d -m %d --gpool_size %d --pqueue_length %d' % (exename,(p),(g),(pa),(m),(gp),(pq))$/;"	v
exename	simulation_test.py	/^exename = '.\/simulation'$/;"	v
exit_if_ptr_is_null	config.c	/^void exit_if_ptr_is_null(void * ptr,const char * message) $/;"	f
false	includes.h	56;"	d
ffile	simulation_test.py	/^ffile = open('.ffile','a')$/;"	v
find_list	packet_manager.c	/^struct blist * find_list(struct list_head * head, flow_item_t * flow)$/;"	f
finish_generator	packet_generator.c	/^void   finish_generator(generator_group_t * generator_group)$/;"	f
finish_parser_group	packet_parser.c	/^void finish_parser_group(parser_group_t * parser_group)$/;"	f
flist	simulation_test.py	/^flist = []$/;"	v
flow_display	display.c	/^void flow_display(flow_item_t * flow)$/;"	f
flow_item	includes.h	/^typedef struct flow_item$/;"	s
flow_item_t	includes.h	/^}flow_item_t;$/;"	t	typeref:struct:flow_item
free_buf	pool_manager.c	/^void free_buf(pool_t * pool,void * data)$/;"	f
free_flow	hash.c	/^static inline void free_flow(flow_item_t * flow)$/;"	f	file:
free_flow	packet_manager.c	/^static inline void free_flow(flow_item_t * flow)$/;"	f	file:
free_flow	packet_parser.c	/^static inline void free_flow(flow_item_t * flow)$/;"	f	file:
free_num	pool_manager.h	/^    unsigned int    free_num;$/;"	m	struct:_pool
free_packet	packet_parser.c	/^static inline void free_packet(packet_t * packet)$/;"	f	file:
full	queue_manager.h	/^    pthread_cond_t full;$/;"	m	struct:_common_queue
gbarrier	simulation.c	/^tmc_sync_barrier_t gbarrier; $/;"	v
generator	packet_generator.h	/^    generator_t * generator;$/;"	m	struct:generator_group
generator	packet_generator.h	/^typedef struct generator$/;"	s
generator	simulation_test.py	/^generator = [5,10] $/;"	v
generator_group	packet_generator.c	/^static generator_group_t * generator_group = NULL;$/;"	v	file:
generator_group	packet_generator.h	/^typedef struct generator_group$/;"	s
generator_group_t	packet_generator.h	/^}generator_group_t;$/;"	t	typeref:struct:generator_group
generator_mode	packet_generator.c	/^static void generator_mode(generator_t * generator,int data_len)$/;"	f	file:
generator_nums	config.h	/^    int     generator_nums;$/;"	m	struct:__config
generator_pool_size	config.h	/^    int generator_pool_size;   $/;"	m	struct:__config
generator_t	packet_generator.h	/^}generator_t;$/;"	t	typeref:struct:generator
generator_tcp_packet	packet_generator.c	/^static inline void generator_tcp_packet(packet_t * packet,sim_config_t * config)$/;"	f	file:
generator_udp_packet	packet_generator.c	/^static inline void generator_udp_packet(packet_t * packet,sim_config_t * config)$/;"	f	file:
get_buf	pool_manager.c	/^int get_buf(pool_t * pool,int flag, void ** data)$/;"	f
get_cpu_mhz	config.c	/^static uint32_t get_cpu_mhz()$/;"	f	file:
get_cycle_count_intel	includes.h	/^static inline uint64_t get_cycle_count_intel()$/;"	f
get_generator_group	packet_generator.c	/^generator_group_t * get_generator_group()$/;"	f
get_manager_group	packet_manager.c	/^manager_group_t * get_manager_group()$/;"	f
get_next_dstip	packet_generator.c	/^static inline uint32_t get_next_dstip(sim_config_t * config)$/;"	f	file:
get_next_dstport	packet_generator.c	/^static inline uint16_t get_next_dstport(sim_config_t * config)$/;"	f	file:
get_next_srcip	packet_generator.c	/^static inline uint32_t get_next_srcip(sim_config_t * config)$/;"	f	file:
get_next_srcport	packet_generator.c	/^static inline uint16_t get_next_srcport(sim_config_t * config)$/;"	f	file:
get_parser_group	packet_parser.c	/^parser_group_t * get_parser_group()$/;"	f
get_update_speed	lossratio.c	/^static int get_update_speed(const char * buf)$/;"	f	file:
ghash_view	simulation.c	/^int ghash_view[36] = {0};$/;"	v
global_config	config.c	/^sim_config_t * global_config;$/;"	v
global_cpus	simulation.c	/^cpu_set_t global_cpus;$/;"	v
global_create_generator_lock	packet_generator.c	/^static pthread_mutex_t global_create_generator_lock = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
global_create_manager_lock	packet_manager.c	/^static pthread_mutex_t global_create_manager_lock = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
global_create_parser_lock	packet_parser.c	/^static pthread_mutex_t global_create_parser_lock = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
global_loss	lossratio.c	/^drop_t * global_loss = &global_loss_body;$/;"	v
global_loss_body	lossratio.c	/^drop_t global_loss_body;$/;"	v
global_manager_group	packet_manager.c	/^static manager_group_t * global_manager_group = NULL;$/;"	v	file:
global_parser_group	packet_parser.c	/^static parser_group_t * global_parser_group = NULL;$/;"	v	file:
gpool_size	simulation_test.py	/^gpool_size = [500000,800000] $/;"	v
group	mpipe.h	/^    int                     group;$/;"	m	struct:__mpipe_t
hash_add_item	hash.c	/^int  hash_add_item(hash_table ** htp, uint32_t key, void * value )$/;"	f
hash_count	hash.c	/^uint32_t hash_count(hash_table * ht)$/;"	f
hash_create	hash.c	/^hash_table * hash_create(int num)$/;"	f
hash_index	packet_parser.c	/^static inline unsigned int hash_index(flow_item_t * flow,manager_group_t * manager_group)$/;"	f	file:
hash_item_t	hash.c	/^typedef session_item_t hash_item_t ;$/;"	t	file:
hash_lookup_item	hash.c	/^void * hash_lookup_item(hash_table * ht, uint32_t key, void * value)$/;"	f
hash_table	hash.h	/^typedef struct hash_table {$/;"	s
hash_table	hash.h	/^} hash_table;$/;"	t	typeref:struct:hash_table
hash_travel_delete	hash.c	/^void  hash_travel_delete(hash_table * ht)$/;"	f
height	display.c	/^    int height;$/;"	m	struct:__anon1	file:
ht	packet_manager.h	/^    struct hash_table * ht;$/;"	m	struct:_session_manager	typeref:struct:_session_manager::hash_table
id	packet_generator.h	/^    pthread_t   id;$/;"	m	struct:generator
id	packet_manager.h	/^    pthread_t          id;$/;"	m	struct:_session_manager
id	packet_parser.h	/^    pthread_t id;$/;"	m	struct:_parser
index	packet_generator.h	/^    int         index;$/;"	m	struct:generator
index	packet_manager.h	/^    int                index;$/;"	m	struct:_session_manager
init_common_queue	queue_manager.c	/^common_queue_t * init_common_queue(int numbers,int item_size)$/;"	f
init_config_s	config.c	/^int init_config_s(sim_config_t * config)$/;"	f
init_generator_group	packet_generator.c	/^generator_group_t * init_generator_group(sim_config_t * config)$/;"	f
init_manager_group	packet_manager.c	/^manager_group_t * init_manager_group(sim_config_t * config)$/;"	f
init_mpipe_common	mpipe.c	/^static int init_mpipe_common(mpipe_common_t * mpipe)$/;"	f	file:
init_mpipe_config	mpipe.c	/^int init_mpipe_config(mpipe_common_t * mpipe,sim_config_t * config)$/;"	f
init_mpipe_equeue	mpipe.c	/^static int init_mpipe_equeue(mpipe_common_t * mpipe)$/;"	f	file:
init_mpipe_iqueue	mpipe.c	/^static int init_mpipe_iqueue(mpipe_common_t * mpipe)$/;"	f	file:
init_mpipe_resource	mpipe.c	/^void init_mpipe_resource(mpipe_common_t * mpipe)$/;"	f
init_mpipe_rules	mpipe.c	/^static int init_mpipe_rules(mpipe_common_t * mpipe)$/;"	f	file:
init_parser_group	packet_parser.c	/^parser_group_t * init_parser_group(sim_config_t * config)$/;"	f
init_pool	pool_manager.c	/^pool_t * init_pool(pool_type_t type,int numbers,int item_size)$/;"	f
init_signle_generator	packet_generator.c	/^static inline void init_signle_generator(generator_group_t * generator_group,int i)$/;"	f	file:
init_signle_manager	packet_manager.c	/^static inline void init_signle_manager(manager_group_t * manager_group,int i)$/;"	f	file:
init_single_parser	packet_parser.c	/^static inline void init_single_parser(parser_t * parser)$/;"	f	file:
instance	mpipe.h	/^    int instance;$/;"	m	struct:__mpipe_t
ip_xsum	checksum.c	/^uint16_t ip_xsum (uint16_t *buff, int len, uint32_t xsum)$/;"	f
iqueues	mpipe.h	/^    gxio_mpipe_iqueue_t **  iqueues;$/;"	m	struct:__mpipe_t
is_empty_common_queue	queue_manager.c	/^bool is_empty_common_queue(common_queue_t * common_queue)$/;"	f
is_empty_pool	pool_manager.c	/^bool is_empty_pool(pool_t * pool)$/;"	f
is_full_common_queue	queue_manager.c	/^bool is_full_common_queue(common_queue_t * common_queue)$/;"	f
is_full_pool	pool_manager.c	/^bool is_full_pool(pool_t * pool)$/;"	f
item	list.h	/^	session_item_t  item;$/;"	m	struct:blist
item_size	pool_manager.h	/^    int             item_size;$/;"	m	struct:_pool
item_size	queue_manager.h	/^    int item_size;$/;"	m	struct:_common_queue
last_time	includes.h	/^    uint64_t last_time;$/;"	m	struct:_session_item
length	includes.h	/^    uint32_t length;$/;"	m	struct:_session_item
length	includes.h	/^    unsigned int    length; \/* 一个包的长度*\/$/;"	m	struct:packet
length	queue_manager.h	/^    unsigned int length;$/;"	m	struct:_common_queue
likely	includes.h	96;"	d
link	mpipe.h	/^    gxio_mpipe_link_t link;$/;"	m	struct:__mpipe_t
link_name	config.h	/^    char * link_name;$/;"	m	struct:__config
link_name	mpipe.h	/^    char *      link_name;$/;"	m	struct:__mpipe_t
list	hash.h	/^    struct list_head list;$/;"	m	struct:bucket	typeref:struct:bucket::list_head
list1024	simulation_test.py	/^list1024 = [] $/;"	v
list128	simulation_test.py	/^list128  = [] $/;"	v
list1280	simulation_test.py	/^list1280 = [] $/;"	v
list1518	simulation_test.py	/^list1518 = [] $/;"	v
list256	simulation_test.py	/^list256  = [] $/;"	v
list512	simulation_test.py	/^list512  = [] $/;"	v
list64	simulation_test.py	/^list64   = [] $/;"	v
list_add	list.h	/^static inline void list_add(struct list_head *new, struct list_head *head)$/;"	f
list_add_tail	list.h	/^static inline void list_add_tail(struct list_head *new, struct list_head *head)$/;"	f
list_del	list.h	/^static inline void list_del(struct list_head *entry)$/;"	f
list_empty	list.h	/^static inline int list_empty(const struct list_head *head)$/;"	f
list_entry	list.h	75;"	d
list_for_each	list.h	78;"	d
list_for_each_safe	list.h	82;"	d
list_head	list.h	/^struct list_head {$/;"	s
list_move_tail	list.h	/^static inline void list_move_tail(struct list_head *list,$/;"	f
listhead	list.h	/^	struct list_head listhead;$/;"	m	struct:blist	typeref:struct:blist::list_head
listn	simulation_test.py	/^                            listn = result.split("\\n")$/;"	v
lock	hash.h	/^    pthread_mutex_t  lock;$/;"	m	struct:bucket
long_options	simulation.c	/^struct option long_options[] =$/;"	v	typeref:struct:option
lower_ip	includes.h	/^    uint32_t lower_ip;$/;"	m	struct:_session_item
lower_ip	includes.h	/^    uint32_t lower_ip;$/;"	m	struct:flow_item
lower_port	includes.h	/^    uint32_t lower_port;$/;"	m	struct:_session_item
lower_port	includes.h	/^    uint32_t lower_port;$/;"	m	struct:flow_item
main	simulation.c	/^int main(int argc, char ** argv)$/;"	f
make_all_packet	packet_generator.c	/^static void make_all_packet(generator_t * generator,GenerHandler * Handler)$/;"	f	file:
make_flow_item_tcp	packet_parser.c	/^static inline void make_flow_item_tcp(flow_item_t * flow,packet_t * packet,int len)$/;"	f	file:
make_flow_item_udp	packet_parser.c	/^static inline void make_flow_item_udp(flow_item_t * flow,packet_t * packet,int header_len)$/;"	f	file:
make_hash	packet_parser.c	/^static inline uint32_t make_hash(uint32_t f1,uint32_t f2,uint32_t f3,uint32_t f4,uint32_t SIZE) $/;"	f	file:
make_new_session	hash.c	/^static inline void make_new_session(struct blist * blist,$/;"	f	file:
manager	packet_manager.h	/^    manager_t * manager;$/;"	m	struct:_group
manager	simulation_test.py	/^manager = [5,11]$/;"	v
manager_buffer_size	config.h	/^    int manager_buffer_size;$/;"	m	struct:__config
manager_group_t	packet_manager.h	/^}manager_group_t;$/;"	t	typeref:struct:_group
manager_hash_length	config.h	/^    int manager_hash_length;$/;"	m	struct:__config
manager_nums	config.h	/^    int     manager_nums;$/;"	m	struct:__config
manager_pool_size	config.h	/^    int manager_pool_size;$/;"	m	struct:__config
manager_queue_length	config.h	/^    int manager_queue_length;$/;"	m	struct:__config
manager_t	packet_manager.h	/^}manager_t;$/;"	t	typeref:struct:_session_manager
max	simulation_test.py	/^                            max = averages(listn)$/;"	v
maxargs	simulation_test.py	/^                            maxargs = [p,g,pa,m,gp,pq]$/;"	v
mpipe	packet_generator.h	/^    mpipe_common_t * mpipe;$/;"	m	struct:generator
mpipe_common_t	mpipe.h	/^typedef int mpipe_common_t;$/;"	t
mpipe_common_t	mpipe.h	/^}mpipe_common_t;$/;"	t	typeref:struct:__mpipe_t
mpipe_send_packet	mpipe.c	/^void mpipe_send_packet(mpipe_common_t * mpipe,$/;"	f
mutex	pool_manager.h	/^    pthread_mutex_t mutex;$/;"	m	struct:_pool
mutex	queue_manager.h	/^    pthread_mutex_t mutex;$/;"	m	struct:_common_queue
next	list.h	/^	struct list_head* next; $/;"	m	struct:list_head	typeref:struct:list_head::list_head
next_prime	hash.c	/^static int next_prime(int x)$/;"	f	file:
next_thread_id	packet_generator.h	/^    int         next_thread_id;$/;"	m	struct:generator
node	pool_manager.h	/^    void         ** node;$/;"	m	struct:_pool
node	queue_manager.h	/^    void ** node;$/;"	m	struct:_common_queue
notif_ring_entries	config.h	/^    int32_t  notif_ring_entries;$/;"	m	struct:__config
notif_ring_entries	mpipe.h	/^    int         notif_ring_entries;$/;"	m	struct:__mpipe_t
now	packet_generator.h	/^    struct timeval old,now;$/;"	m	struct:generator	typeref:struct:generator::
num_buckets	hash.h	/^        int num_buckets;$/;"	m	struct:hash_table
num_buckets	mpipe.h	/^    int                     num_buckets;$/;"	m	struct:__mpipe_t
num_workers	mpipe.h	/^    int         num_workers;$/;"	m	struct:__mpipe_t
numbers	packet_generator.h	/^    uint32_t numbers;$/;"	m	struct:generator_group
numbers	packet_manager.h	/^    uint32_t    numbers;$/;"	m	struct:_group
numbers	packet_parser.h	/^    uint32_t numbers;$/;"	m	struct:parser_m
old	packet_generator.h	/^    struct timeval old,now;$/;"	m	struct:generator	typeref:struct:generator::timeval
once_packet_nums	config.h	/^	int     once_packet_nums;$/;"	m	struct:__config
os	simulation_test.py	/^import os$/;"	i
packet	includes.h	/^    packet_t * packet;$/;"	m	struct:flow_item
packet	includes.h	/^typedef struct packet$/;"	s
packet_generator	packet_generator.c	/^static void packet_generator(generator_t * generator,int data_len,GenerHandler * Handler)$/;"	f	file:
packet_generator_loop	packet_generator.c	/^void * packet_generator_loop(void * arg)$/;"	f
packet_generator_mode	config.h	/^    int     packet_generator_mode;$/;"	m	struct:__config
packet_manager_loop	packet_manager.c	/^void * packet_manager_loop(void * arg)$/;"	f
packet_parser_loop	packet_parser.c	/^void * packet_parser_loop(void * arg)$/;"	f
packet_t	includes.h	/^}packet_t;$/;"	t	typeref:struct:packet
parse_args	simulation.c	/^void parse_args(int argc, char * const argv[],sim_config_t * config)$/;"	f
parse_frag_off	parse.c	/^static inline void parse_frag_off(__be16 frag_off)$/;"	f	file:
parse_full_packet	parse.c	/^void parse_full_packet(void * buffer)$/;"	f
parse_ip_protocol	parse.c	/^static inline void parse_ip_protocol(__u8 protocol)$/;"	f	file:
parse_iphdr	parse.c	/^void parse_iphdr(struct iphdr * iph)$/;"	f
parse_mac_type	parse.c	/^static void parse_mac_type(__be16 h_proto)$/;"	f	file:
parse_tcphdr	parse.c	/^void parse_tcphdr(struct tcphdr * tcph)$/;"	f
parse_tos	parse.c	/^static inline void parse_tos(unsigned char tos)$/;"	f	file:
parser	packet_parser.h	/^    parser_t * parser;$/;"	m	struct:parser_m
parser	simulation_test.py	/^parser = [5,10]$/;"	v
parser_group_H	packet_parser.h	8;"	d
parser_group_t	packet_parser.h	/^}parser_group_t;$/;"	t	typeref:struct:parser_m
parser_m	packet_parser.h	/^typedef struct parser_m$/;"	s
parser_nums	config.h	/^    int     parser_nums;$/;"	m	struct:__config
parser_pool_size	config.h	/^    int parser_pool_size;$/;"	m	struct:__config
parser_process	packet_parser.c	/^static int parser_process(manager_group_t * manager_group,$/;"	f	file:
parser_queue_length	config.h	/^    int parser_queue_length;$/;"	m	struct:__config
parser_t	packet_parser.h	/^}parser_t;$/;"	t	typeref:struct:_parser
payload	includes.h	/^    unsigned char * payload;$/;"	m	struct:flow_item
payload_len	includes.h	/^    unsigned int    payload_len;$/;"	m	struct:flow_item
per_worker_buckets	config.h	/^    int     per_worker_buckets;$/;"	m	struct:__config
per_worker_buckets	mpipe.h	/^    int         per_worker_buckets;$/;"	m	struct:__mpipe_t
period	config.h	/^    uint32_t period;$/;"	m	struct:__config
pipe_depth	config.h	/^	int pipe_depth;$/;"	m	struct:__config
pkt_data	config.h	/^    char * pkt_data;$/;"	m	struct:__config
pktlen	config.h	/^    int pktlen;$/;"	m	struct:__config
pktlen	simulation_test.py	/^pktlen = [64,128,256,512,1024,1280,1518]$/;"	v
pool	includes.h	/^    mwsr_pool_t * pool;          \/* 这个包来自哪个池子*\/$/;"	m	struct:flow_item
pool	includes.h	/^    mwsr_pool_t * pool;          \/* 这个包来自哪个池子*\/$/;"	m	struct:packet
pool	includes.h	/^    swsr_pool_t * pool;$/;"	m	struct:_session_item
pool	packet_generator.h	/^    mwsr_pool_t   * pool;$/;"	m	struct:generator
pool	packet_parser.h	/^    mwsr_pool_t  * pool;$/;"	m	struct:_parser
pool_t	pool_manager.h	/^}pool_t;$/;"	t	typeref:struct:_pool
pool_type	pool_manager.h	/^    pool_type_t pool_type;$/;"	m	struct:_pool
pool_type_t	pool_manager.h	/^}pool_type_t;$/;"	t	typeref:enum:_pool_type
pop_common_buf	queue_manager.c	/^bool pop_common_buf(common_queue_t * common_queue,void ** data)$/;"	f
pop_datalink	packet_generator.c	/^static inline void pop_datalink(void * packet,sim_config_t * config)$/;"	f	file:
pop_iplayer_tcp	packet_generator.c	/^static inline void pop_iplayer_tcp(void * iph,sim_config_t * config)$/;"	f	file:
pop_iplayer_udp	packet_generator.c	/^static inline void pop_iplayer_udp(void * iph,sim_config_t * config)$/;"	f	file:
pop_payload	packet_generator.c	/^int pop_payload(void * payload, char * data,sim_config_t * config)$/;"	f
pop_pos	pool_manager.h	/^    int             pop_pos;$/;"	m	struct:_pool
pop_pos	queue_manager.h	/^    int pop_pos;$/;"	m	struct:_common_queue
pop_transmission_tcp	packet_generator.c	/^static inline int pop_transmission_tcp(void * tcph,sim_config_t * config)$/;"	f	file:
pop_transmission_udp	packet_generator.c	/^static inline int pop_transmission_udp(void * udph,sim_config_t * config)$/;"	f	file:
pqueue_length	simulation_test.py	/^pqueue_length = [500000,800000]$/;"	v
prev	list.h	/^	struct list_head* prev;$/;"	m	struct:list_head	typeref:struct:list_head::list_head
print_config_file	config.c	/^void print_config_file(sim_config_t * config)$/;"	f
print_lock	parse.c	/^pthread_mutex_t print_lock = PTHREAD_MUTEX_INITIALIZER;$/;"	v
print_packet	parse.c	/^void print_packet(unsigned char * packet,int size)    $/;"	f
print_pool_type	pool_manager.c	/^static inline void print_pool_type(pool_t * pool)$/;"	f	file:
printf_mac_info	parse.c	/^static void printf_mac_info(struct ethhdr * ether_header)$/;"	f	file:
process_all_session	packet_manager.c	/^static void * process_all_session(void * arg)$/;"	f	file:
process_ipc_request	lossratio.c	/^void * process_ipc_request(void * arg)$/;"	f
process_session	packet_manager.c	/^void * process_session(void * arg)$/;"	f
protocol	config.h	/^    int protocol;$/;"	m	struct:__config
protocol	includes.h	/^    uint8_t  protocol;$/;"	m	struct:_session_item
protocol	includes.h	/^    uint8_t  protocol;$/;"	m	struct:flow_item
push_common_buf	queue_manager.c	/^bool push_common_buf(common_queue_t * common_queue,int flag,void * data)$/;"	f
push_pos	pool_manager.h	/^    int             push_pos;$/;"	m	struct:_pool
push_pos	queue_manager.h	/^    int push_pos;$/;"	m	struct:_common_queue
queue	packet_manager.h	/^    swsr_pool_t       * queue;$/;"	m	struct:_session_manager
queue	packet_parser.h	/^    swsr_queue_t * queue;$/;"	m	struct:_parser
rank	packet_generator.h	/^    int rank;$/;"	m	struct:generator
read_config_file	config.c	/^int read_config_file(const char * file_name,sim_config_t * config)$/;"	f
read_config_simple	config.c	/^int read_config_simple(const char * file_name,sim_config_t * config)$/;"	f
result1024	simulation_test.py	/^result1024 = open('.result1024', 'a') $/;"	v
result128	simulation_test.py	/^result128  = open('.result128',  'a') $/;"	v
result1280	simulation_test.py	/^result1280 = open('.result1280', 'a') $/;"	v
result1518	simulation_test.py	/^result1518 = open('.result1518', 'a') $/;"	v
result256	simulation_test.py	/^result256  = open('.result256',  'a') $/;"	v
result512	simulation_test.py	/^result512  = open('.result512',  'a') $/;"	v
result64	simulation_test.py	/^result64   = open('.result64',   'a') $/;"	v
ring	mpipe.h	/^    unsigned int            ring;$/;"	m	struct:__mpipe_t
saddr_cur	config.h	/^    uint32_t saddr_cur;$/;"	m	struct:__config
saddr_max	config.h	/^    uint32_t saddr_max;$/;"	m	struct:__config
saddr_min	config.h	/^    uint32_t saddr_min;$/;"	m	struct:__config
screen_display	config.h	/^	int screen_display;$/;"	m	struct:__config
screen_init	display.c	/^static void screen_init()$/;"	f	file:
send_total	lossratio.h	/^    uint64_t send_total;$/;"	m	struct:__anon2
session_item_t	includes.h	/^}session_item_t;$/;"	t	typeref:struct:_session_item
session_pool	packet_manager.h	/^    mwsr_queue_t      * session_pool;$/;"	m	struct:_session_manager
short_options	simulation.c	/^char * const short_options = "g:p:m:";$/;"	v
sim_config_t	config.h	/^}sim_config_t;$/;"	t	typeref:struct:__config
skip_opeartor	config.c	/^static inline char * skip_opeartor(const char * p)$/;"	f	file:
skip_var_name	config.c	/^static inline char * skip_var_name(const char * p)$/;"	f	file:
speed	config.h	/^    uint32_t speed;$/;"	m	struct:__config
speed_mode	config.h	/^	int speed_mode;$/;"	m	struct:__config
sport_cur	config.h	/^    uint32_t sport_cur;$/;"	m	struct:__config
sport_max	config.h	/^    uint32_t sport_max;$/;"	m	struct:__config
sport_min	config.h	/^    uint32_t sport_min;$/;"	m	struct:__config
srcmac	config.h	/^    unsigned char srcmac[6];$/;"	m	struct:__config
stack_idx	mpipe.h	/^    int stack_idx;$/;"	m	struct:__mpipe_t
start_ipc_client	lossratio.c	/^void * start_ipc_client(void * arg)$/;"	f
start_ipc_server	lossratio.c	/^void * start_ipc_server(void * arg)$/;"	f
startx	display.c	/^    int startx;$/;"	m	struct:__anon1	file:
starty	display.c	/^    int starty;$/;"	m	struct:__anon1	file:
strupr	config.c	/^static inline char * strupr(char * p)$/;"	f	file:
sys_display	display.c	/^void sys_display(generator_group_t * generator_group,$/;"	f
tilera_packet_collector	packet_generator.c	/^static void tilera_packet_collector(generator_t * generator)$/;"	f	file:
total	packet_parser.h	/^    uint64_t total;$/;"	m	struct:_parser
total	pool_manager.h	/^    unsigned int    total;$/;"	m	struct:_pool
total	queue_manager.h	/^    unsigned int total;$/;"	m	struct:_common_queue
total_send_byte	packet_generator.h	/^    uint64_t    total_send_byte;$/;"	m	struct:generator
true	includes.h	55;"	d
unlikely	includes.h	95;"	d
upper_ip	includes.h	/^    uint32_t upper_ip;$/;"	m	struct:_session_item
upper_ip	includes.h	/^    uint32_t upper_ip;$/;"	m	struct:flow_item
upper_port	includes.h	/^    uint32_t upper_port;$/;"	m	struct:_session_item
upper_port	includes.h	/^    uint32_t upper_port;$/;"	m	struct:flow_item
width	display.c	/^    int width;$/;"	m	struct:__anon1	file:
win	display.c	/^    WINDOW * win;$/;"	m	struct:__anon1	file:
window	display.c	/^static window_t window[WORKER_SET_SIZE];$/;"	v	file:
window_t	display.c	/^}window_t;$/;"	t	typeref:struct:__anon1	file:
